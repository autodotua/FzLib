<UserControl x:Name="userControl"
             x:Class="FzLib.Control.Picker.TimePicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:FzLib.Control.Picker"
             mc:Ignorable="d" 
             Loaded="userControl_Loaded"
>

    <UserControl.Resources>
        <local:ToHalfMarginConverter x:Key="conver"/>


        <sys:Boolean x:Key="readOnly">False</sys:Boolean>
        <Style x:Key="timeTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="IsReadOnly" Value="{DynamicResource readOnly}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <EventSetter Event="TextChanged" Handler="TextBox_TextChanged"/>
            <EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown"/>
            <EventSetter Event="PreviewLostKeyboardFocus" Handler="TextBox_PreviewLostKeyboardFocus"/>
        </Style>

        <!--<ControlTemplate x:Key="tmpForThumb" TargetType="{x:Type Thumb}">
            <Border>
                <Rectangle Width="1.5" x:Name="rec" Fill="Gray"/>
            </Border>
        </ControlTemplate>-->

        <!--<Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid x:Name="g" >
                            <Border x:Name="bd" Padding="{TemplateBinding Padding}">
                                <ContentPresenter Margin="2"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            -->
        <!--<Thumb x:Name="PART_HeaderGripper" Template="{StaticResource tmpForThumb}" HorizontalAlignment="Right" Margin="0"/>-->
        <!--

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style TargetType="{x:Type ListView}">
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="BorderThickness" Value="0"/>
            <EventSetter Event="SelectionChanged" Handler="ListView_SelectionChanged"/>

        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=userControl, Mode=OneWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="bd"    Padding="0"  SnapsToDevicePixels="True" Background="White">
                            <ContentPresenter HorizontalAlignment="Center"  Margin="1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter TargetName="bd" Property="Background" Value="LightGray"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver"  Value="True" >
                                <Setter TargetName="bd" Property="Background" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <StackPanel Orientation="Horizontal">

        <TextBox x:Name="txtHour" Style="{StaticResource timeTextBoxStyle}" MaxLength="2">00</TextBox>
        <TextBlock Grid.Column="1" x:Name="tbkColon1">:</TextBlock>
        <TextBox x:Name="txtMin" Style="{StaticResource timeTextBoxStyle}" MaxLength="2" Grid.Column="2">00</TextBox>
        <TextBlock  x:Name="tbkColon2" Grid.Column="3">:</TextBlock>
        <TextBox x:Name="txtSec" Style="{StaticResource timeTextBoxStyle}" MaxLength="2" Grid.Column="4">00</TextBox>

        <Button x:Name="btn" HorizontalAlignment="Center"  Grid.Column="6" Click="btn_Click" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="g" Width="16">
                                    <Viewbox x:Name="view" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <Path x:Name="path"  Margin="4,2,4,0"  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"  Fill="{Binding Foreground, ElementName=userControl}"/>
                                    </Viewbox >
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="LightGray" TargetName="g" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" Value="Gray" TargetName="g" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
            <Popup x:Name="p"  AllowsTransparency="True" StaysOpen="False" PopupAnimation="Slide">
                <Grid Background="{Binding Background, ElementName=lvwHour, Mode=OneWay}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ActualWidth, ElementName=txtHour, Mode=OneWay}"/>
                        <ColumnDefinition Width="{Binding ActualWidth, ElementName=tbkColon1, Mode=OneWay}"/>
                        <ColumnDefinition Width="{Binding ActualWidth, ElementName=txtMin, Mode=OneWay}"/>
                        <ColumnDefinition Width="{Binding ActualWidth, ElementName=tbkColon2, Mode=OneWay}"/>
                        <ColumnDefinition Width="{Binding ActualWidth, ElementName=txtSec, Mode=OneWay}"/>
                        <ColumnDefinition Width="{Binding ActualWidth, ElementName=btn, Mode=OneWay}" />
                    </Grid.ColumnDefinitions>
                    <ListView x:Name="lvwHour" Grid.Column="0" Margin="{Binding ActualWidth,ElementName=tbkColon,Mode=OneWay,Converter={StaticResource conver}}"  Height="{Binding ActualWidth, ElementName=userControl, Mode=OneWay}"/>
                    <ListView x:Name="lvwMin" Grid.Column="2" Margin="{Binding ActualWidth,ElementName=tbkColon,Mode=OneWay,Converter={StaticResource conver}}"  Height="{Binding ActualWidth, ElementName=userControl, Mode=OneWay}"/>
                    <ListView x:Name="lvwSec" Grid.Column="4"  Margin="{Binding ActualWidth,ElementName=tbkColon,Mode=OneWay,Converter={StaticResource conver}}" Height="{Binding ActualWidth, ElementName=userControl, Mode=OneWay}"/>
                    <!--<Border Grid.Column="1" Background="{Binding Background, ElementName=lvwHour, Mode=OneWay}"  Height="{Binding ActualWidth, ElementName=userControl, Mode=OneWay}"/>
                    <Border Grid.Column="3" Background="{Binding Background, ElementName=lvwHour, Mode=OneWay}"  Height="{Binding ActualWidth, ElementName=userControl, Mode=OneWay}"/>-->
                </Grid>
            </Popup>
        </Button>
        <!--<ListView Grid.Column="4" Height="{Binding ActualWidth, ElementName=userControl, Mode=OneWay}">
            <ListViewItem>hello</ListViewItem>
        </ListView>-->
    </StackPanel>
</UserControl>
